family=list(family="beta", link="logit"))
plot_model(model, vline.color = "red",show.values = TRUE, value.offset = .3) + ylim(-1,8)
plot_model(m1, vline.color = "red",show.values = TRUE, value.offset = .3) + ylim(-01,4)
tweetsDf$biasChoice <- abs(tweetsDf$biasChoice - 1)
m1 = glmmTMB(biasChoice ~ condition_account * condition_emotionSort+ condition_showImage_cat+  (1|usertoken/condition_account),
tweetsDf,
family=list(family="beta", link="logit"))
plot_model(m1, vline.color = "red",show.values = TRUE, value.offset = .3) + ylim(-01,4)
m1 = glmmTMB(biasChoice ~ condition_account * condition_emotionSort+ condition_showImage_cat * condition_emotionSort+  (1|usertoken/condition_account),
tweetsDf,
family=list(family="beta", link="logit"))
summary(m1)
plot_model(m1, vline.color = "red",show.values = TRUE, value.offset = .3) + ylim(-01,4)
m1 = glmmTMB(biasChoice ~  condition_emotionSort+ condition_showImage_cat+  (1|usertoken/condition_account),
tweetsDf,
family=list(family="beta", link="logit"))
plot_model(m1, vline.color = "red",show.values = TRUE, value.offset = .3) + ylim(-01,4)
m1 = glmmTMB(biasChoice ~  condition_emotionSort * condition_showImage_cat+  (1|usertoken/condition_account),
tweetsDf,
family=list(family="beta", link="logit"))
summary(m1)
plot_model(m1, vline.color = "red",show.values = TRUE, value.offset = .3) + ylim(-01,4)
m1 = glmmTMB(biasChoice ~  condition * condition_emotionSort + condition_showImage_cat+  (1|usertoken/condition_account),
tweetsDf,
family=list(family="beta", link="logit"))
m1 = glmmTMB(biasChoice ~  condition_account * condition_emotionSort + condition_showImage_cat+  (1|usertoken/condition_account),
tweetsDf,
family=list(family="beta", link="logit"))
summary(m1)
plot_model(m1, vline.color = "red",show.values = TRUE, value.offset = .3) + ylim(-01,4)
df = read.csv("rq1AccResponses.csv")
tweetsDf = read.csv("rq1TweetsResponses.csv")
unique(df$condition_emotionSort)
df$condition_emotionSort <- factor(df$condition_emotionSort, c("happy","mixed","angry"))
df$condition_account <- factor(df$condition_account, c("CNNPolitics","nypost","MotherJones","Jerusalem_Post","InvestWatchBlog","opednews","amlookout","veteranstoday"))
summary(df$postq_social)
df$postq_economic_coded <= as.numeric(df$postq_economic_coded)
df$postq_economic_coded <- revalue(df$postq_economic, c("Very Consertavite"=1,"Slightly Conservative"=0.5,"Moderate"=0,"Slightly liberal"=-0.5,"Very liberal"=-1))
df$postq_social_coded <- revalue(df$postq_social, c("Very Consertavite"=1,"Slightly Conservative"=0.5,"Moderate"=0,"Slightly liberal"=-0.5,"Very liberal"=-1))
df$postq_economic_coded <- as.numeric(df$postq_economic_coded)
df$postq_social_coded <- as.numeric(df$postq_social_coded)
df$credibility_choice <- sapply(df$credibility_choice,function(x){
if (x<=0) {
return (0.0001)
} else {
return (x)
}
})
tweetsDf$condition_emotionSort <- factor(tweetsDf$condition_emotionSort, c("happy","angry"))
tweetsDf$condition_showImage_cat <- factor(tweetsDf$condition_showImage_cat, c("without image","with image"))
tweetsDf$condition_account <- factor(tweetsDf$condition_account, c("CNNPolitics","nypost","MotherJones","Jerusalem_Post","InvestWatchBlog","opednews","amlookout","veteranstoday"))
tweetsDf  <- na.omit(tweetsDf)
tweetsDf <- tweetsDf %>% filter(is.finite(tweetsDf$biasChoice))
tweetsDf <- tweetsDf %>% filter(is.finite(tweetsDf$biasCI))
tweetsDf$biasChoice <- sapply(tweetsDf$biasChoice,function(x){
if (x<0) {
return (0.0001)
} else {
return (x)
}
})
model <- glmmTMB(credibility_choice ~  condition_account * condition_emotionSort + condition_showImage + (1|usertoken/condition_account),data=df,
family=list(family="beta", link="logit"))
plot_model(model, vline.color = "red",show.values = TRUE, value.offset = .3) + ylim(-1,8)
model <- glmmTMB(credibility_choice ~  condition_politicalLabel * condition_emotionSort + condition_showImage + (1|usertoken/condition_account),data=df,
family=list(family="beta", link="logit"))
plot_model(model, vline.color = "red",show.values = TRUE, value.offset = .3) + ylim(-1,8)
model <- glmmTMB(credibility_choice ~  condition_credibleLabel * condition_emotionSort + condition_politicalLabel * condition_emotionSort + condition_showImage + (1|usertoken/condition_account),data=df,
family=list(family="beta", link="logit"))
plot_model(model, vline.color = "red",show.values = TRUE, value.offset = .3) + ylim(-1,8)
df$condition_credibleLabel <- revalue(df$condition_credibleLabel, c(0="not credible",1="credible"))
c(0="not credible",1="credible")
summary(df$condition_credibleLabel)
return ("credible")
df$condition_credibleLabel_cat <- sapply(df$condition_credibleLabel,function(x){
if (x==0){
return ("not credible")
} else {
return ("credible")
}
})
model <- glmmTMB(credibility_choice ~  condition_credibleLabel_cat * condition_emotionSort + condition_politicalLabel * condition_emotionSort + condition_showImage + (1|usertoken/condition_account),data=df,
family=list(family="beta", link="logit"))
plot_model(model, vline.color = "red",show.values = TRUE, value.offset = .3) + ylim(-1,8)
return ("not credible")
df$condition_credibleLabel_cat <- sapply(df$condition_credibleLabel,function(x){
if (x==1){
return ("credible")
} else {
return ("not credible")
}
})
model <- glmmTMB(credibility_choice ~  condition_credibleLabel_cat * condition_emotionSort + condition_politicalLabel * condition_emotionSort + condition_showImage + (1|usertoken/condition_account),data=df,
family=list(family="beta", link="logit"))
plot_model(model, vline.color = "red",show.values = TRUE, value.offset = .3) + ylim(-1,8)
model <- glmmTMB(credibility_choice ~  condition_politicalLabel * condition_emotionSort + condition_showImage + (1|usertoken/condition_account),data=df,
family=list(family="beta", link="logit"))
plot_model(model, vline.color = "red",show.values = TRUE, value.offset = .3) + ylim(-1,8)
library(plyr)
library(dplyr)
library(ggplot2)
library(statsr)
library("lme4")
library(report)
library(tidyverse)
library(sjPlot)
library(sjlabelled)
library(sjmisc)
library(rjson)
library(glmmTMB)
theme_set(theme_sjplot())
library(scales)
df = read.csv("rq1AccResponses.csv")
tweetsDf = read.csv("rq1TweetsResponses.csv")
unique(df$condition_emotionSort)
df$condition_emotionSort <- factor(df$condition_emotionSort, c("happy","mixed","angry"))
df$condition_account <- factor(df$condition_account, c("CNNPolitics","nypost","MotherJones","Jerusalem_Post","InvestWatchBlog","opednews","amlookout","veteranstoday"))
df$condition_credibleLabel_cat <- sapply(df$condition_credibleLabel,function(x){
if (x==1){
return ("credible")
} else {
return ("not credible")
}
})
summary(df$postq_social)
summary(df$condition_credibleLabel)
df$postq_economic_coded <= as.numeric(df$postq_economic_coded)
df$postq_economic_coded <- revalue(df$postq_economic, c("Very Consertavite"=1,"Slightly Conservative"=0.5,"Moderate"=0,"Slightly liberal"=-0.5,"Very liberal"=-1))
df$postq_social_coded <- revalue(df$postq_social, c("Very Consertavite"=1,"Slightly Conservative"=0.5,"Moderate"=0,"Slightly liberal"=-0.5,"Very liberal"=-1))
df$postq_economic_coded <- as.numeric(df$postq_economic_coded)
df$postq_social_coded <- as.numeric(df$postq_social_coded)
df$credibility_choice <- sapply(df$credibility_choice,function(x){
if (x<=0) {
return (0.0001)
} else {
return (x)
}
})
tweetsDf$condition_emotionSort <- factor(tweetsDf$condition_emotionSort, c("happy","angry"))
tweetsDf$condition_showImage_cat <- factor(tweetsDf$condition_showImage_cat, c("without image","with image"))
tweetsDf$condition_account <- factor(tweetsDf$condition_account, c("CNNPolitics","nypost","MotherJones","Jerusalem_Post","InvestWatchBlog","opednews","amlookout","veteranstoday"))
tweetsDf  <- na.omit(tweetsDf)
tweetsDf <- tweetsDf %>% filter(is.finite(tweetsDf$biasChoice))
tweetsDf <- tweetsDf %>% filter(is.finite(tweetsDf$biasCI))
tweetsDf$biasChoice <- sapply(tweetsDf$biasChoice,function(x){
if (x<0) {
return (0.0001)
} else {
return (x)
}
})
model <- glmmTMB(credibility_choice ~  condition_politicalLabel * condition_emotionSort + condition_showImage + (1|usertoken/condition_account),data=df,
family=list(family="beta", link="logit"))
plot_model(model, vline.color = "red",show.values = TRUE, value.offset = .3) + ylim(-1,8)
model <- glmmTMB(credibility_choice ~  condition_politicalLabel * condition_emotionSort + condition_showImage * condition_emotionSort + (1|usertoken/condition_account),data=df,
family=list(family="beta", link="logit"))
plot_model(model, vline.color = "red",show.values = TRUE, value.offset = .3) + ylim(-1,8)
model <- glmmTMB(credibility_choice ~  condition_politicalLabel * condition_emotionSort + condition_showImage  + (1|usertoken/condition_account),data=df,
family=list(family="beta", link="logit"))
plot_model(model, vline.color = "red",show.values = TRUE, value.offset = .3) + ylim(-1,8)
plot_model(model, vline.color = "red",show.values = TRUE, value.offset = .3) + ylim(-1,4)
m1 = glmmTMB(biasChoice ~  condition_politicalLabel * condition_emotionSort + condition_showImage_cat+  (1|usertoken/condition_account),
tweetsDf,
family=list(family="beta", link="logit"))
plot_model(m1, vline.color = "red",show.values = TRUE, value.offset = .3) + ylim(-01,4)
m1 = glmmTMB(biasChoice ~ condition_credibleLabel_cat * condition_emotionSort+   condition_politicalLabel * condition_emotionSort + condition_showImage_cat+  (1|usertoken/condition_account),
tweetsDf,
family=list(family="beta", link="logit"))
tweetsDf$condition_credibleLabel_cat <- sapply(tweetsDf$condition_credibleLabel,function(x){
if (x==1){
return ("credible")
} else {
return ("not credible")
}
})
m1 = glmmTMB(biasChoice ~ condition_credibleLabel_cat * condition_emotionSort+   condition_politicalLabel * condition_emotionSort + condition_showImage_cat+  (1|usertoken/condition_account),
tweetsDf,
family=list(family="beta", link="logit"))
plot_model(m1, vline.color = "red",show.values = TRUE, value.offset = .3) + ylim(-01,4)
model1 <- glmmTMB(credibility_uncertainty ~  condition_politicalLabel * condition_emotionSort + condition_showImage  + (1|usertoken/condition_account),data=df,
family=list(family="beta", link="logit"))
summary(df$credibility_uncertainty)
df$credibility_uncertainty <- sapply(df$credibility_uncertainty,function(x){
if (x<=0) {
return (0.0001)
} else {
return (x)
}
})
model1 <- glmmTMB(credibility_uncertainty ~  condition_politicalLabel * condition_emotionSort + condition_showImage  + (1|usertoken/condition_account),data=df,
family=list(family="beta", link="logit"))
plot_model(model1, vline.color = "red",show.values = TRUE, value.offset = .3) + ylim(-1,4)
tweetsDf$biasCI <- sapply(tweetsDf$biasCI,function(x){
if (x<0) {
return (0.0001)
} else {
return (x)
}
})
m1 = glmmTMB(biasCI ~ condition_credibleLabel_cat * condition_emotionSort+   condition_politicalLabel * condition_emotionSort + condition_showImage_cat+  (1|usertoken/condition_account),
tweetsDf,
family=list(family="beta", link="logit"))
m = glmmTMB(biasChoice ~ condition_credibleLabel_cat * condition_emotionSort+   condition_politicalLabel * condition_emotionSort + condition_showImage_cat+  (1|usertoken/condition_account),
tweetsDf,
family=list(family="beta", link="logit"))
m1 = glmmTMB(biasCI ~ condition_credibleLabel_cat * condition_emotionSort+   condition_politicalLabel * condition_emotionSort + condition_showImage_cat+  (1|usertoken/condition_account),
tweetsDf,
family=list(family="beta", link="logit"))
plot_model(m1, vline.color = "red",show.values = TRUE, value.offset = .3) + ylim(-01,4)
m1 = glmmTMB(biasCI ~ condition_credibleLabel_cat * condition_emotionSort+   condition_politicalLabel * condition_emotionSort + condition_showImage_cat+  (1|usertoken/condition_account),
tweetsDf,
family=list(family="beta", link="logit"))
if (x<=0) {
return (0.0001)
} else {
return (x)
}
tweetsDf$biasCI <- sapply(tweetsDf$biasCI,function(x){
if (x<=0) {
return (0.0001)
} else {
return (x)
}
})
m1 = glmmTMB(biasCI ~ condition_credibleLabel_cat * condition_emotionSort+   condition_politicalLabel * condition_emotionSort + condition_showImage_cat+  (1|usertoken/condition_account),
tweetsDf,
family=list(family="beta", link="logit"))
plot_model(m1, vline.color = "red",show.values = TRUE, value.offset = .3) + ylim(-01,4)
m = glmmTMB(biasChoice ~ condition_credibleLabel_cat * condition_emotionSort +   condition_politicalLabel * condition_emotionSort + condition_showImage_cat+  (1|usertoken/condition_account),
tweetsDf,
family=list(family="beta", link="logit"))
m1 = glmmTMB(biasCI ~ condition_credibleLabel_cat * condition_emotionSort +   condition_politicalLabel * condition_emotionSort + condition_showImage_cat+  (1|usertoken/condition_account),
tweetsDf,
family=list(family="beta", link="logit"))
plot_model(m1, vline.color = "red",show.values = TRUE, value.offset = .3) + ylim(-01,4)
plot_model(m, vline.color = "red",show.values = TRUE, value.offset = .3) + ylim(-01,4)
m1 = glmmTMB(biasCI ~ condition_credibleLabel_cat * condition_emotionSort +   condition_politicalLabel * condition_emotionSort + condition_showImage_cat * condition_emotionSort+  (1|usertoken/condition_account),
tweetsDf,
family=list(family="beta", link="logit"))
m = glmmTMB(biasChoice ~ condition_credibleLabel_cat * condition_emotionSort +   condition_politicalLabel * condition_emotionSort + condition_showImage_cat * condition_emotionSort+  (1|usertoken/condition_account),
tweetsDf,
family=list(family="beta", link="logit"))
plot_model(m, vline.color = "red",show.values = TRUE, value.offset = .3) + ylim(-01,4)
m1 = glmmTMB(biasCI ~ condition_credibleLabel_cat * condition_emotionSort +   condition_politicalLabel * condition_emotionSort + condition_showImage_cat +  (1|usertoken/condition_account),
tweetsDf,
family=list(family="beta", link="logit"))
m = glmmTMB(biasChoice ~ condition_credibleLabel_cat * condition_emotionSort +   condition_politicalLabel * condition_emotionSort + condition_showImage_cat+  (1|usertoken/condition_account),
tweetsDf,
family=list(family="beta", link="logit"))
plot_model(m, vline.color = "red",show.values = TRUE, value.offset = .3) + ylim(-01,4)
plot_model(m1, vline.color = "red",show.values = TRUE, value.offset = .3) + ylim(-01,4)
m1 = glmmTMB(biasCI ~ condition_credibleLabel_cat * condition_emotionSort +   condition_politicalLabel * condition_emotionSort + condition_showImage_cat +  (1|usertoken),
tweetsDf,
family=list(family="beta", link="logit"))
plot_model(m1, vline.color = "red",show.values = TRUE, value.offset = .3) + ylim(-01,4)
m = glmmTMB(biasChoice ~ condition_credibleLabel_cat * condition_emotionSort +   condition_politicalLabel * condition_emotionSort + condition_showImage_cat+  (1|usertoken/condition_account),
tweetsDf,
family=list(family="beta", link="logit"))
m1 = glmmTMB(biasCI ~ condition_credibleLabel_cat * condition_emotionSort +   condition_politicalLabel * condition_emotionSort + condition_showImage_cat +  (1|usertoken/condition_account),
tweetsDf,
family=list(family="beta", link="logit"))
plot_model(m, vline.color = "red",show.values = TRUE, value.offset = .3) + ylim(-01,4)
plot_model(m1, vline.color = "red",show.values = TRUE, value.offset = .3) + ylim(-01,4)
plot_model(m1, vline.color = "red",show.values = TRUE, value.offset = .3) + ylim(0,2)
plot_model(m1, vline.color = "red",show.values = TRUE, value.offset = .3) + ylim(0.5,1.6)
plot_model(m, vline.color = "red",show.values = TRUE, value.offset = .3) + ylim(-01,4)
plot_model(m, vline.color = "red",show.values = TRUE, value.offset = .3) + ylim(0,2)
plot_model(m, vline.color = "red",show.values = TRUE, value.offset = .3) + ylim(0.3,2)
1
plot_model(m1, vline.color = "red",show.values = TRUE, value.offset = .3) + ylim(0.5,1.6)
plot_model(model, vline.color = "red",show.values = TRUE, value.offset = .3) + ylim(-1,4)
plot_model(model, vline.color = "red",show.values = TRUE, value.offset = .3) + ylim(0,4)
plot_model(model1, vline.color = "red",show.values = TRUE, value.offset = .3) + ylim(-1,4)
plot_model(model1, vline.color = "red",show.values = TRUE, value.offset = .3) + ylim(0,4)
plot_model(model1, vline.color = "red",show.values = TRUE, value.offset = .3) + ylim(0,2.5)
model <- glmmTMB(credibility_choice ~  condition_politicalLabel * condition_emotionSort + condition_showImage_cat + condition_showImage  + (1|usertoken/condition_account),data=df,
family=list(family="beta", link="logit"))
model <- glmmTMB(credibility_choice ~  condition_politicalLabel * condition_emotionSort * condition_showImage_cat + condition_showImage  + (1|usertoken/condition_account),data=df,
family=list(family="beta", link="logit"))
plot_model(model, vline.color = "red",show.values = TRUE, value.offset = .3) + ylim(-1,4)
plot_model(model, vline.color = "red",show.values = TRUE, value.offset = .3)
plot_model(model, vline.color = "red",show.values = TRUE, value.offset = .3)
model <- glmmTMB(credibility_choice ~  condition_politicalLabel * condition_emotionSort * condition_showImage_cat + (1|usertoken/condition_account),data=df,
family=list(family="beta", link="logit"))
plot_model(model, vline.color = "red",show.values = TRUE, value.offset = .3)
model1 <- glmmTMB(politicalOrientation_choice ~  condition_politicalLabel * condition_emotionSort + condition_showImage  + (1|usertoken/condition_account),data=df,
family=list(family="beta", link="logit"))
model2 <- glmmTMB(politicalOrientation_choice ~  condition_politicalLabel * condition_emotionSort + condition_showImage  + (1|usertoken/condition_account),data=df,
family=list(family="beta", link="logit"))
plot_model(model2, vline.color = "red",show.values = TRUE, value.offset = .3) + ylim(0,2.5)
plot_model(model2, vline.color = "red",show.values = TRUE, value.offset = .3)
model2 <- glmmTMB(politicalOrientation_choice ~  condition_politicalLabel * condition_emotionSort + condition_showImage  + (1|usertoken/condition_account),data=df,
family=list(family="beta", link="logit"))
model2 <- lmer(politicalOrientation_choice ~  condition_politicalLabel * condition_emotionSort + condition_showImage  + (1|usertoken/condition_account),data=df,
)
model2 <- lmer(politicalOrientation_choice ~  condition_politicalLabel * condition_emotionSort + condition_showImage  + (1|usertoken),data=df,
)
plot_model(model2, vline.color = "red",show.values = TRUE, value.offset = .3)
model2 <- lmer(politicalOrientation_choice ~  condition_account * condition_emotionSort + condition_showImage  + (1|usertoken),data=df,
)
plot_model(model2, vline.color = "red",show.values = TRUE, value.offset = .3)
df$condition_account <- factor(df$condition_account,c("opednews","veteranstoday","InvestWatchBlog","amlookout","CNNPolitics","MotherJones","nypost","Jerusalem_Post"))
model2 <- lmer(politicalOrientation_choice ~  condition_account * condition_emotionSort + condition_showImage  + (1|usertoken),data=df,
)
plot_model(model2, vline.color = "red",show.values = TRUE, value.offset = .3)
df$condition_account <- factor(df$condition_account,c("CNNPolitics","MotherJones","nypost","Jerusalem_Post","opednews","veteranstoday","InvestWatchBlog","amlookout"))
tweetsDf$condition_account <- factor(tweetsDf$condition_account, c("CNNPolitics","MotherJones","nypost","Jerusalem_Post","opednews","veteranstoday","InvestWatchBlog","amlookout"))
model2 <- lmer(politicalOrientation_choice ~  condition_account * condition_emotionSort + condition_showImage  + (1|usertoken),data=df,
)
plot_model(model2, vline.color = "red",show.values = TRUE, value.offset = .3)
model2 <- lmer(politicalOrientation_choice ~  condition_politicalLabel * condition_emotionSort + condition_showImage  + (1|usertoken),data=df,
)
plot_model(model2, vline.color = "red",show.values = TRUE, value.offset = .3)
model2 <- lmer(politicalOrientation_choice ~  condition_politicalLabel + condition_emotionSort * condition_showImage  + (1|usertoken),data=df,
)
plot_model(model2, vline.color = "red",show.values = TRUE, value.offset = .3)
df$politicalOrientation_choice <- scaled(df$politicalOrientation_choice)
library(scales)
df$politicalOrientation_choice <- rescale(df$politicalOrientation_choice, c(0.0001,0.9999))
model2 <- glmmTMB(politicalOrientation_choice ~  condition_politicalLabel + condition_emotionSort * condition_showImage  + (1|usertoken),data=df,family=list(family="beta", link="logit")
)
plot_model(model2, vline.color = "red",show.values = TRUE, value.offset = .3)
model2 <- glmmTMB(politicalOrientation_choice ~  condition_account + condition_emotionSort * condition_showImage  + (1|usertoken),data=df,family=list(family="beta", link="logit")
)
plot_model(model2, vline.color = "red",show.values = TRUE, value.offset = .3)
model2 <- glmmTMB(politicalOrientation_choice ~  condition_account * condition_emotionSort + condition_showImage  + (1|usertoken),data=df,family=list(family="beta", link="logit")
)
plot_model(model2, vline.color = "red",show.values = TRUE, value.offset = .3)
model1 <- glmmTMB(credibility_uncertainty ~  condition_politicalLabel * condition_emotionSort + condition_showImage  + (1|usertoken/condition_account),data=df,
family=list(family="beta", link="logit"))
plot_model(model1, vline.color = "red",show.values = TRUE, value.offset = .3)
plot_model(model, vline.color = "red",show.values = TRUE, value.offset = .3) + ylim(0,4)
df$condition_showImage_cat <- factor(df$condition_showImage_cat, c("without image","with image"))
model <- glmmTMB(credibility_choice ~  condition_politicalLabel * condition_emotionSort * condition_showImage_cat + (1|usertoken/condition_account),data=df,
family=list(family="beta", link="logit"))
plot_model(model, vline.color = "red",show.values = TRUE, value.offset = .3)
model <- glmmTMB(credibility_choice ~  condition_politicalLabel * condition_emotionSort * condition_showImage_cat + (1|usertoken/condition_account),data=df,
family=list(family="beta", link="logit"))
plot_model(model, vline.color = "red",show.values = TRUE, value.offset = .3) + ylim(-1,4)
model <- glmmTMB(credibility_choice ~  condition_credibleLabel_cat * condition_emotionSort * condition_showImage_cat + (1|usertoken/condition_account),data=df,
family=list(family="beta", link="logit"))
plot_model(model, vline.color = "red",show.values = TRUE, value.offset = .3) + ylim(-1,4)
plot_model(model, vline.color = "red",show.values = TRUE, value.offset = .3)
model <- glmmTMB(credibility_choice ~  condition_credibleLabel_cat * condition_emotionSort * condition_showImage_cat + (1|usertoken/condition_account),data=df,
family=list(family="beta", link="logit"))
model <- glmmTMB(credibility_choice ~  condition_politicalLabel * condition_emotionSort * condition_showImage_cat + (1|usertoken/condition_account),data=df,
family=list(family="beta", link="logit"))
plot_model(model, vline.color = "red",show.values = TRUE, value.offset = .3)
model <- glmmTMB(credibility_choice ~  condition_politicalLabel * condition_emotionSort + condition_showImage_cat + (1|usertoken/condition_account),data=df,
family=list(family="beta", link="logit"))
plot_model(model, vline.color = "red",show.values = TRUE, value.offset = .3)
model <- glmmTMB(credibility_choice ~  condition_politicalLabel * condition_emotionSort + condition_showImage_cat * condition_emotionSort + (1|usertoken/condition_account),data=df,
family=list(family="beta", link="logit"))
plot_model(model, vline.color = "red",show.values = TRUE, value.offset = .3)
model <- glmmTMB(credibility_choice ~  condition_politicalLabel * condition_emotionSort + condition_showImage_cat + (1|usertoken/condition_account),data=df,
family=list(family="beta", link="logit"))
plot_model(model, vline.color = "red",show.values = TRUE, value.offset = .3) + ylim(-1,4)
m = glmmTMB(biasChoice ~ condition_credibleLabel_cat * condition_emotionSort +   condition_politicalLabel * condition_emotionSort + condition_showImage_cat+  (1|usertoken/condition_account),
tweetsDf,
family=list(family="beta", link="logit"))
m1 = glmmTMB(biasCI ~ condition_credibleLabel_cat * condition_emotionSort +   condition_politicalLabel * condition_emotionSort + condition_showImage_cat +  (1|usertoken/condition_account),
tweetsDf,
family=list(family="beta", link="logit"))
plot_model(m, vline.color = "red",show.values = TRUE, value.offset = .3) + ylim(0.3,2)
plot_model(m1, vline.color = "red",show.values = TRUE, value.offset = .3) + ylim(0.5,1.6)
library(plyr)
library(dplyr)
library(ggplot2)
library(statsr)
library("lme4")
library(report)
library(tidyverse)
library(sjPlot)
library(sjlabelled)
library(sjmisc)
library(rjson)
library(glmmTMB)
theme_set(theme_sjplot())
library(scales)
df = read.csv("modelComparisonDf.csv")
summary(df$choiceAbsError)
modelDf = read.csv("modelComparisonDf.csv")
View(modelDf)
model <- glmmTMB(choiceAbsError ~  choiceModel * condition_emotionSort (1|usertoken/accName),data=df,
family=list(family="beta", link="logit"))
model <- glmmTMB(choiceAbsError ~  choiceModel * condition_emotion (1|usertoken/accName),data=df,
family=list(family="beta", link="logit"))
model <- glmmTMB(choiceAbsError ~  choiceModel * condition_emotion (1|usertoken/accName),data=modelDf,
family=list(family="beta", link="logit"))
model <- glmmTMB(choiceAbsError ~  choiceModel * condition_emotion + (1|usertoken/accName),data=modelDf,
family=list(family="beta", link="logit"))
plot_model(model, vline.color = "red",show.values = TRUE, value.offset = .3) + ylim(-1,4)
unique(modelDf$choiceModel)
modelDf$choiceModel <- factor(modelDf$choiceModel, c("first choice","last choice","firstChoiceWeighted","lastChoiceWeighted","mean choice"))
model <- glmmTMB(choiceAbsError ~  choiceModel * condition_emotion + (1|usertoken/accName),data=modelDf,
family=list(family="beta", link="logit"))
plot_model(model, vline.color = "red",show.values = TRUE, value.offset = .3) + ylim(-1,4)
model <- glmmTMB(choiceAbsError ~ credChoice + choiceModel * condition_emotion + (1|usertoken/accName),data=modelDf,
family=list(family="beta", link="logit"))
plot_model(model, vline.color = "red",show.values = TRUE, value.offset = .3) + ylim(-1,4)
model <- glmmTMB(choiceAbsError ~ choiceModel + condition_emotion + (1|usertoken/accName),data=modelDf,
family=list(family="beta", link="logit"))
plot_model(model, vline.color = "red",show.values = TRUE, value.offset = .3) + ylim(-1,4)
modelDf$condition_emotion <- factor(modelDf$condition_emotion, c("happy","angry","mixed"))
model <- glmmTMB(choiceAbsError ~ choiceModel + condition_emotion + (1|usertoken/accName),data=modelDf,
family=list(family="beta", link="logit"))
plot_model(model, vline.color = "red",show.values = TRUE, value.offset = .3) + ylim(-1,4)
plot_model(model, vline.color = "red",show.values = TRUE, value.offset = .3) + ylim(-1,4)
model <- glmmTMB(credibility_choice ~  condition_politicalLabel * condition_emotionSort + condition_showImage_cat + (1|usertoken/condition_account),data=df,
family=list(family="beta", link="logit"))
plot_model(model, vline.color = "red",show.values = TRUE, value.offset = .3) + ylim(-1,4)
model1 <- glmmTMB(credibility_uncertainty ~  condition_politicalLabel * condition_emotionSort + condition_showImage  + (1|usertoken/condition_account),data=df,
family=list(family="beta", link="logit"))
plot_model(model, vline.color = "red",show.values = TRUE, value.offset = .3) + ylim(0,4)
model <- glmmTMB(credibility_choice ~  condition_politicalLabel * condition_emotionSort + condition_showImage_cat + (1|usertoken/condition_account),data=df,
family=list(family="beta", link="logit"))
df = read.csv("rq1AccResponses.csv")
tweetsDf = read.csv("rq1TweetsResponses.csv")
unique(df$condition_emotionSort)
df$condition_emotionSort <- factor(df$condition_emotionSort, c("happy","mixed","angry"))
df$condition_account <- factor(df$condition_account,c("CNNPolitics","MotherJones","nypost","Jerusalem_Post","opednews","veteranstoday","InvestWatchBlog","amlookout"))
df$condition_credibleLabel_cat <- sapply(df$condition_credibleLabel,function(x){
if (x==1){
return ("credible")
} else {
return ("not credible")
}
})
summary(df$postq_social)
summary(df$condition_credibleLabel)
df$postq_economic_coded <= as.numeric(df$postq_economic_coded)
df$postq_economic_coded <- revalue(df$postq_economic, c("Very Consertavite"=1,"Slightly Conservative"=0.5,"Moderate"=0,"Slightly liberal"=-0.5,"Very liberal"=-1))
df$postq_social_coded <- revalue(df$postq_social, c("Very Consertavite"=1,"Slightly Conservative"=0.5,"Moderate"=0,"Slightly liberal"=-0.5,"Very liberal"=-1))
df$condition_showImage_cat <- factor(df$condition_showImage_cat, c("without image","with image"))
df$postq_economic_coded <- as.numeric(df$postq_economic_coded)
df$postq_social_coded <- as.numeric(df$postq_social_coded)
df$credibility_choice <- sapply(df$credibility_choice,function(x){
if (x<=0) {
return (0.0001)
} else {
return (x)
}
})
df$credibility_uncertainty <- sapply(df$credibility_uncertainty,function(x){
if (x<=0) {
return (0.0001)
} else {
return (x)
}
})
df$politicalOrientation_choice <- rescale(df$politicalOrientation_choice, c(0.0001,0.9999))
tweetsDf$condition_credibleLabel_cat <- sapply(tweetsDf$condition_credibleLabel,function(x){
if (x==1){
return ("credible")
} else {
return ("not credible")
}
})
tweetsDf$condition_emotionSort <- factor(tweetsDf$condition_emotionSort, c("happy","angry"))
tweetsDf$condition_showImage_cat <- factor(tweetsDf$condition_showImage_cat, c("without image","with image"))
tweetsDf$condition_account <- factor(tweetsDf$condition_account, c("CNNPolitics","MotherJones","nypost","Jerusalem_Post","opednews","veteranstoday","InvestWatchBlog","amlookout"))
tweetsDf  <- na.omit(tweetsDf)
tweetsDf <- tweetsDf %>% filter(is.finite(tweetsDf$biasChoice))
tweetsDf <- tweetsDf %>% filter(is.finite(tweetsDf$biasCI))
tweetsDf$biasChoice <- sapply(tweetsDf$biasChoice,function(x){
if (x<0) {
return (0.0001)
} else {
return (x)
}
})
tweetsDf$biasCI <- sapply(tweetsDf$biasCI,function(x){
if (x<=0) {
return (0.0001)
} else {
return (x)
}
})
summary(df$credibility_uncertainty)
model <- glmmTMB(credibility_choice ~  condition_politicalLabel * condition_emotionSort + condition_showImage_cat + (1|usertoken/condition_account),data=df,
family=list(family="beta", link="logit"))
model1 <- glmmTMB(credibility_uncertainty ~  condition_politicalLabel * condition_emotionSort + condition_showImage  + (1|usertoken/condition_account),data=df,
family=list(family="beta", link="logit"))
plot_model(model, vline.color = "red",show.values = TRUE, value.offset = .3) + ylim(0,4)
plot_model(model1, vline.color = "red",show.values = TRUE, value.offset = .3)
plot_model(model, vline.color = "red",show.values = TRUE, value.offset = .3) + ylim(0,4)
plot_model(model, vline.color = "red",show.values = TRUE, value.offset = .3) + ylim(0,4)
plot_model(model1, vline.color = "red",show.values = TRUE, value.offset = .3)
m = glmmTMB(biasChoice ~ condition_credibleLabel_cat * condition_emotionSort +   condition_politicalLabel * condition_emotionSort + condition_showImage_cat+  (1|usertoken/condition_account),
tweetsDf,
family=list(family="beta", link="logit"))
m1 = glmmTMB(biasCI ~ condition_credibleLabel_cat * condition_emotionSort +   condition_politicalLabel * condition_emotionSort + condition_showImage_cat +  (1|usertoken/condition_account),
tweetsDf,
family=list(family="beta", link="logit"))
plot_model(m, vline.color = "red",show.values = TRUE, value.offset = .3) + ylim(0.3,2)
plot_model(m1, vline.color = "red",show.values = TRUE, value.offset = .3) + ylim(0.5,1.6)
plot_model(m, vline.color = "red",show.values = TRUE, value.offset = .3) + ylim(0.3,2)
m = glmmTMB(biasChoice ~ condition_politicalLabel * condition_emotionSort +  condition_showImage_cat+  (1|usertoken/condition_account),
tweetsDf,
family=list(family="beta", link="logit"))
m1 = glmmTMB(biasCI ~ condition_politicalLabel * condition_emotionSort +   condition_showImage_cat +  (1|usertoken/condition_account),
tweetsDf,
family=list(family="beta", link="logit"))
plot_model(m, vline.color = "red",show.values = TRUE, value.offset = .3) + ylim(0.3,2)
plot_model(m1, vline.color = "red",show.values = TRUE, value.offset = .3) + ylim(0.5,1.6)
plot_model(m, vline.color = "red",show.values = TRUE, value.offset = .3) + ylim(0.3,2)
plot_model(m1, vline.color = "red",show.values = TRUE, value.offset = .3) + ylim(0.5,1.6)
plot_model(m, vline.color = "red",show.values = TRUE, value.offset = .3) + ylim(0.3,2)
plot_model(m, vline.color = "red",show.values = TRUE, value.offset = .3) + ylim(0.3,2)
modelt <- glmmTMB(choiceAbsError ~ choiceModel + condition_emotion + (1|usertoken/accName),data=modelDf,
family=list(family="beta", link="logit"))
plot_model(modelt, vline.color = "red",show.values = TRUE, value.offset = .3) + ylim(-1,4)
